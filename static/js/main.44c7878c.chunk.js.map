{"version":3,"sources":["Mojs.js","App.js","reportWebVitals.js","index.js"],"names":["MojsExample","duration","animDom","useRef","useState","isOpen","setIsOpen","cardArray","setCardArray","selected","setSelected","start","setStart","count","setCount","match","setMatch","cardWidth","window","innerWidth","cardHeight","color","useEffect","length","map","card","current","play","setTimeout","playBackward","el","onclick","idx","open","style","cssText","then","x","y","radiusX","radiusY","i","burst","createRef","mojs","Burst","parent","radius","0","delay","Math","random","children","shape","fill","floor","generate","endings","ending","Shape","30","easing","repeat","isYoyo","innerHTML","push","Clear","clickHandler","useCallback","len","childNodes","removeChild","cardOpt","stroke","strokeWidth","isShowStart","rx","ry","tmpMatch","sort","a","b","tmpArray","j","tmp","X","Y","to","className","onClick","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44c7878c.chunk.js","sourcesContent":["import React, {\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  createRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport mojs from \"@mojs/core\";\r\nimport \"./Mojs.css\";\r\n\r\nconst MojsExample = ({ duration }) => {\r\n  const animDom = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [cardArray, setCardArray] = useState([]);\r\n  const [selected, setSelected] = useState(-1);\r\n  const [start, setStart] = useState(false);\r\n  const [count, setCount] = useState(8);\r\n  const [match, setMatch] = useState([\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n  ]);\r\n\r\n  let cardWidth = window.innerWidth * 0.062;\r\n  if (cardWidth > 40) {\r\n    cardWidth = 40;\r\n  }\r\n  const cardHeight = cardWidth * 1.5;\r\n  const color = [\r\n    \"#E6594C\",\r\n    \"#E6E163\",\r\n    \"#935AE6\",\r\n    \"#93E67C\",\r\n    \"#E69CDA\",\r\n    \"#73C8E6\",\r\n    \"#4EE6C7\",\r\n    \"#E6BE95\",\r\n  ];\r\n  useEffect(() => {\r\n    if (!cardArray.length) return;\r\n    cardArray.map((card) => {\r\n      card.current.play();\r\n      setTimeout(function () {\r\n        card.current.playBackward();\r\n        setStart(true);\r\n      }, 3500);\r\n    });\r\n  }, [cardArray]);\r\n\r\n  useEffect(() => {\r\n    if (!cardArray.length) return;\r\n    cardArray.map((card) => {\r\n      card.current.el.onclick = () => {\r\n        if (!start) return;\r\n        const idx = card.current.idx;\r\n        if (!card.current.open) {\r\n          card.current.play();\r\n          card.current.open = true;\r\n          if (selected === -1) {\r\n            setSelected(idx);\r\n          } else {\r\n            if (match[selected] === match[idx]) {\r\n              setTimeout(function () {\r\n                cardArray[selected].current.el.style.cssText += \"z-index:1\";\r\n                cardArray[idx].current.el.style.cssText += \"z-index:1\";\r\n                cardArray[selected].current\r\n                  .then({ x: 0, y: cardHeight, duration: 200 })\r\n                  .then({ radiusX: 0, radiusY: 0 })\r\n                  .play();\r\n                cardArray[idx].current\r\n                  .then({ x: 0, y: cardHeight, duration: 200 })\r\n                  .then({ radiusX: 0, radiusY: 0 })\r\n                  .play();\r\n              }, 1000);\r\n              setCount(count - 1);\r\n            } else {\r\n              setTimeout(function () {\r\n                cardArray[selected].current.playBackward();\r\n                cardArray[idx].current.playBackward();\r\n                cardArray[selected].current.open = false;\r\n                cardArray[idx].current.open = false;\r\n              }, 1200);\r\n            }\r\n            setSelected(-1);\r\n          }\r\n        }\r\n      };\r\n    });\r\n  });\r\n\r\n  const Clear = () => {\r\n    for (let i = 0; i < 8; i++) {\r\n      const burst = createRef();\r\n      burst.current = new mojs.Burst({\r\n        parent: animDom,\r\n        radius: { 0: 100 },\r\n        delay: Math.random() * 100,\r\n        x: cardWidth * 3 - Math.random() * cardWidth * 6,\r\n        y: cardHeight - Math.random() * cardHeight * 2,\r\n        children: {\r\n          shape: \"circle\",\r\n          radius: 20,\r\n          fill: color[Math.floor(Math.random() * 8)],\r\n          delay: \"stagger( rand(0, 100))\",\r\n        },\r\n      });\r\n      burst.current.generate().play();\r\n    }\r\n    let endings = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const ending = createRef();\r\n      ending.current = new mojs.Shape({\r\n        parent: animDom,\r\n        x: -cardWidth * 2 + cardWidth * i,\r\n        y: { 30: 0 },\r\n        delay: Math.random() * 100,\r\n        easing: \"elastic.out\",\r\n        duration: 1000,\r\n      }).then({\r\n        y: { 0: 15 },\r\n        repeat: 999,\r\n        isYoyo: true,\r\n        duration: 1000,\r\n      });\r\n      ending.current.el.innerHTML = \"CLEAR\"[i];\r\n      ending.current.el.style.cssText += \"font-size:2rem;\";\r\n      endings.push(ending);\r\n    }\r\n    endings.map((ending) => {\r\n      ending.current.play();\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (!count) {\r\n      setTimeout(function () {\r\n        Clear();\r\n      }, 1500);\r\n    }\r\n  }, [count]);\r\n\r\n  const clickHandler = useCallback(() => {\r\n    if (!cardArray.length || true) {\r\n      if (cardArray.length) {\r\n        const len = animDom.current.childNodes.length;\r\n        for (let i = 0; i < len; i++) {\r\n          animDom.current.removeChild(animDom.current.childNodes[0]);\r\n        }\r\n        setStart(false);\r\n      }\r\n      setCount(8);\r\n      const cardOpt = {\r\n        shape: \"rect\",\r\n        stroke: \"#706052\",\r\n        strokeWidth: 2,\r\n        isShowStart: true,\r\n        radius: cardHeight,\r\n        radiusX: cardWidth,\r\n        rx: 5,\r\n        ry: 5,\r\n      };\r\n      let tmpMatch = match;\r\n      tmpMatch.sort((a, b) => {\r\n        return 0.5 - Math.random();\r\n      });\r\n      setMatch(tmpMatch);\r\n      let tmpArray = [];\r\n      for (let i = 0; i < 4; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n          let tmp = createRef();\r\n          const X = (-2.25 + 1.5 * j) * cardWidth * 2;\r\n          const Y = (1.25 * i - 1.25) * cardHeight * 2;\r\n          tmp.current = new mojs.Shape({\r\n            ...cardOpt,\r\n            parent: animDom,\r\n            fill: \"#39996C\",\r\n            x: X,\r\n            y: Y,\r\n          })\r\n            .then({\r\n              radiusX: 0,\r\n              duration: duration,\r\n              easing: \"sin.in\",\r\n              x: { to: X + 30, easing: \"cubic.out\" },\r\n            })\r\n            .then({\r\n              radiusX: cardWidth,\r\n              fill: {\r\n                \"color[tmpMatch[i*4 + j] - 1]\": color[tmpMatch[i * 4 + j] - 1],\r\n              },\r\n              easing: \"sin.out\",\r\n              x: { to: X, easing: \"cubic.in\" },\r\n              strokeWidth: { 0: 0 },\r\n            });\r\n          tmp.current.el.style.cssText += \"cursor: pointer\";\r\n          tmp.current.idx = j + 4 * i;\r\n          tmp.current.open = false;\r\n          tmpArray.push(tmp);\r\n        }\r\n      }\r\n      setCardArray(tmpArray);\r\n    }\r\n    if (!isOpen) {\r\n      setIsOpen(true);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div className=\"MojsExample\">\r\n      <div className=\"content\">\r\n        <h1>MoJS React Example</h1>\r\n        <p>Using hooks</p>\r\n        <button className=\"button\" onClick={clickHandler}>\r\n          {isOpen ? \"다시하기\" : \"시작하기\"}\r\n        </button>\r\n        <div ref={animDom} className=\"container\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MojsExample;\r\n","import \"./App.css\";\nimport MojsExample from \"./Mojs\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MojsExample duration={200}></MojsExample>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}